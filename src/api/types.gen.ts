// This file is auto-generated by @hey-api/openapi-ts

export type ChatMessageRecord = {
    type?: ChatMessageType;
    text?: string;
    timestamp?: Instant;
    modelProvider?: ChatModelProvider;
    modelName?: string;
};

export type ChatMessageType = 'SYSTEM' | 'USER' | 'AI' | 'TOOL_EXECUTION_RESULT';

export type ChatModelContainer = {
    uid?: string;
    label?: string;
    description?: string;
    provider?: ChatModelProvider;
};

export type ChatModelProvider = 'AZURE' | 'OLLAMA' | 'OPENAI';

export type InfoDTO = {
    security?: SecurityInfoDTO;
    oidc?: OidcInfoDTO;
    imprintLink?: string;
    privacyPolicyLink?: string;
};

export type IngestionStatus = 'PENDING' | 'SUCCEEDED' | 'FAILED';

export type Instant = string;

export type Knowledge = {
    id?: UUID;
    type?: KnowledgeType;
    checksum?: string;
    ingestionStatus?: IngestionStatus;
    createdAt?: Instant;
    lastUpdatedAt?: Instant;
    source?: string;
    contentType?: string;
    permissions?: {
        [key: string]: Permission;
    };
    label?: string;
    tags?: Array<(string)>;
};

export type KnowledgeType = 'FILE' | 'WEBLINK';

export type OidcInfoDTO = {
    authServerUrl?: string;
    clientId?: string;
    authorizationPath?: string;
    logoutPath?: string;
    tokenPath?: string;
};

export type Permission = 'OWNER' | 'READWRITE' | 'READONLY' | 'NONE';

export type SecurityInfoDTO = {
    anonymousUserEnabled?: boolean;
    anonymousUserSessionTimeout?: number;
};

export type Session = {
    id?: UUID;
    createdAt?: Instant;
    label?: string;
};

export type UserInfoDTO = {
    username?: string;
    roles?: Array<(string)>;
    anonymous?: boolean;
    name?: string;
};

export type UUID = string;

export type ConfigurationResponse = (InfoDTO);

export type ConfigurationError = unknown;

export type GetModelsResponse = (Array<ChatModelContainer>);

export type GetModelsError = (unknown);

export type PromptData = {
    body: string;
    query: {
        /**
         * ID of the session to use
         */
        sessionId: UUID;
        /**
         * UID of the chat model to use
         */
        uid: string;
    };
};

export type PromptResponse = (string);

export type PromptError = (unknown);

export type GetSessionsResponse = (Array<Session>);

export type GetSessionsError = (unknown);

export type CreateSessionResponse = (Session);

export type CreateSessionError = (unknown);

export type DeleteSessionData = {
    path: {
        sessionId: UUID;
    };
};

export type DeleteSessionResponse = (unknown);

export type DeleteSessionError = (unknown);

export type GetHistoryData = {
    path: {
        /**
         * UID of the chat history to get
         */
        sessionId: UUID;
    };
};

export type GetHistoryResponse = (Array<ChatMessageRecord>);

export type GetHistoryError = (unknown);

export type SetSessionLabelData = {
    path: {
        /**
         * UID of the session to set the label for
         */
        sessionId: UUID;
    };
    query: {
        /**
         * session label to set
         */
        label: string;
    };
};

export type SetSessionLabelResponse = (unknown);

export type SetSessionLabelError = (unknown);

export type GetAllKnowledgeResponse = (Array<Knowledge>);

export type GetAllKnowledgeError = (unknown);

export type AddFileSourceData = {
    body: {
        files?: Array<((Blob | File))>;
    };
};

export type AddFileSourceResponse = (Array<UUID>);

export type AddFileSourceError = (unknown);

export type UpdateFileSourceData = {
    body: {
        file?: (Blob | File);
    };
    path: {
        /**
         * UID of the knowledge to update
         */
        id: UUID;
    };
};

export type UpdateFileSourceResponse = (unknown);

export type UpdateFileSourceError = (unknown);

export type GetKnowledgeData = {
    path: {
        /**
         * UID of the knowledge to get
         */
        id: UUID;
    };
};

export type GetKnowledgeResponse = (Knowledge);

export type GetKnowledgeError = (unknown);

export type DeleteKnowledgeData = {
    path: {
        /**
         * UID of the knowledge to delete
         */
        id: UUID;
    };
};

export type DeleteKnowledgeResponse = (unknown);

export type DeleteKnowledgeError = (unknown);

export type GetKnowledgeFileData = {
    path: {
        /**
         * UID of the knowledge to get the source file of
         */
        id: UUID;
    };
};

export type GetKnowledgeFileResponse = (unknown);

export type GetKnowledgeFileError = (unknown);

export type SetKnowledgeLabelData = {
    path: {
        /**
         * UID of the knowledge to set the label for
         */
        id: UUID;
    };
    query: {
        /**
         * the knowledge label to set
         */
        label: string;
    };
};

export type SetKnowledgeLabelResponse = (unknown);

export type SetKnowledgeLabelError = (unknown);

export type RemoveKnowledgeTagData = {
    path: {
        /**
         * UID of the knowledge to which the tag should be removed
         */
        id: UUID;
    };
    query: {
        /**
         * tag to remove
         */
        tag: string;
    };
};

export type RemoveKnowledgeTagResponse = (unknown);

export type RemoveKnowledgeTagError = (unknown);

export type AddKnowledgeTagData = {
    path: {
        /**
         * UID of the knowledge to which the tag should be added
         */
        id: UUID;
    };
    query: {
        /**
         * tag to add
         */
        tag: string;
    };
};

export type AddKnowledgeTagResponse = (unknown);

export type AddKnowledgeTagError = (unknown);

export type LoginResponse = (UserInfoDTO);

export type LoginError = (unknown);

export type DeleteUserDataResponse = (unknown);

export type DeleteUserDataError = (unknown);